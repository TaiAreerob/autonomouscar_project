<launch>
  
  <!--soongsil tf-->
  <arg name="a1" default="-0.8322055191"/>
  <arg name="b1" default="-0.5700453073"/>
  <arg name="c1" default="-0.0769854635"/>
  <arg name="d1" default="70172.000"/>
  <arg name="a2" default="0.3713805154"/>
  <arg name="b2" default="-0.6278480738"/>
  <arg name="c2" default="0.7333024442"/>
  <arg name="d2" default="841821.375"/>
  <arg name="a3" default="0.0096075223"/>
  <arg name="b3" default="0.0035236785"/>
  <arg name="c3" default="-0.0240874565"/>
  <arg name="d3" default="108008.6796875"/>

  <!--kcity tf -->
  <!--<arg name="a1" default="-0.4326139987"/>
  <arg name="b1" default="0.5415875018"/>
  <arg name="c1" default="-0.7341759801"/>
  <arg name="d1" default="-703783"/>
  <arg name="a2" default="-0.7662800103"/>
  <arg name="b2" default="-0.6358286589"/>
  <arg name="c2" default="-0.002047896385"/>
  <arg name="d2" default="264781.875"/>
  <arg name="a3" default="0.1648997632"/>
  <arg name="b3" default="-0.1789357555"/>
  <arg name="c3" default="-0.1748890099"/>
  <arg name="d3" default="1901888.359"/>-->
 
  <node pkg="ntrip_ros" type="ntripclient.py" name="ntrip_ros">
 	 <param name="rtcm_topic" value="/ublox_gps/rtcm"/>
 	 <param name="ntrip_server" value="www.gnssdata.or.kr:2101"/>
 	 <param name="ntrip_user" value="pjm4142@naver.com"/>
 	 <param name="ntrip_pass" value="gnss"/>
 	 <param name="ntrip_stream" value="SOUL-RTCM32"/>
 	 <param name="nmea_gga" value="$GPGGA,091542.752,3729.742,N,12657.341,E,1,12,1.0,0.0,M,0.0,M,,*6A" />  
    <!--heongnam-->
  </node>

  <arg name="node_name" value="ublox_gps"/>
 <!--<arg name="node_name" />-->
 <arg name="param_file_name" value="zed-f9p"/>
  <!--<arg name="param_file_name" doc="name of param file, e.g. rover" />-->
  <arg name="output" default="screen" />
  <arg name="respawn" default="true" />
  <arg name="respawn_delay" default="30" />
  <arg name="clear_params" value="false"/>
  <!--<arg name="clear_params" default="true" />-->

  <node pkg="ublox_gps" type="ublox_gps" name="$(arg node_name)"
        output="$(arg output)" 
        clear_params="$(arg clear_params)"
        respawn="$(arg respawn)" 
        respawn_delay="$(arg respawn_delay)">
    <rosparam command="load" 
              file="$(find ublox_gps)/config/$(arg param_file_name).yaml" />
  </node>

   <node pkg="fix2gnsspose" type="fix2tfpose" name="fix2tfpose">
    <param name="a1" value="$(arg a1)"/>
    <param name="b1" value="$(arg b1)"/>
    <param name="c1" value="$(arg c1)"/>
    <param name="d1" value="$(arg d1)"/>
    <param name="a2" value="$(arg a2)"/>
    <param name="b2" value="$(arg b2)"/>
    <param name="c2" value="$(arg c2)"/>
    <param name="d2" value="$(arg d2)"/>
    <param name="a3" value="$(arg a3)"/>
    <param name="b3" value="$(arg b3)"/>
    <param name="c3" value="$(arg c3)"/>
    <param name="d3" value="$(arg d3)"/>
  </node>

  <node pkg="initial_orientation" type="orientation" name="orientation" />

     <!-- Determine this using rosrun pointgrey_camera_driver list_cameras.
       If not specified, defaults to first camera found. -->
  <arg name="camera_name" default="camera" />
  <arg name="camera_serial" default="0" />
  <arg name="calibrated" default="0" />

  <group ns="$(arg camera_name)">
    <node pkg="nodelet" type="nodelet" name="camera_nodelet_manager" args="manager" />

    <node pkg="nodelet" type="nodelet" name="camera_nodelet"
          args="load pointgrey_camera_driver/PointGreyCameraNodelet camera_nodelet_manager" >
      <param name="frame_id" value="camera" />
      <param name="serial" value="$(arg camera_serial)" />

      <!-- When unspecified, the driver will use the default framerate as given by the
           camera itself. Use this parameter to override that value for cameras capable of
           other framerates. -->
      <param name="frame_rate" value="25" />

      <!-- Use the camera_calibration package to create this file -->
      <param name="camera_info_url" if="$(arg calibrated)"
             value="file://$(env HOME)/.ros/camera_info/$(arg camera_serial).yaml" />
    </node>

    <node pkg="nodelet" type="nodelet" name="image_proc_debayer"
          args="load image_proc/debayer camera_nodelet_manager">
    </node>

    <node pkg="dynamic_reconfigure" type="dynparam" name="dynparam"
          args="load /camera/camera_nodelet /home/autoware/shared_dir/catkin_ws/src/pointgrey_camera_driver/pointgrey_camera_driver/cfg/erp42_camera.yaml">
    </node>
  </group>



</launch>